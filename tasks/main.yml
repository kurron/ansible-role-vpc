---
- name: Create VPC
  ec2_vpc_net:
      cidr_block: "{{ vpc_cidr_block }}"
      dns_hostnames: yes
      dns_support: yes
      multi_ok: no
      name: "{{ vpc_name }}"
      region: "{{ vpc_region }}"
      state: "{{ vpc_state }}"
      tenancy: "default"
      tags:
          Name: "{{ vpc_name }}"
          Project: "{{ vpc_project }}"
          Purpose: "{{ vpc_purpose }}"
          Creator: "{{ vpc_creator }}"
          Environment: "{{ vpc_environment }}"
          Freetext: "{{ vpc_freetext }}"
  register: vpc_result

- name: Store VPC ID
  set_fact:
    vpc_id: "{{ vpc_result.vpc.id }}"

- name: Gather Route Table Facts
  ec2_vpc_route_table_facts:
      region: "{{ vpc_region }}"
      filters:
          vpc-id: "{{ vpc_result.vpc.id }}"
  register: route_table_result

- name: Store Default Route Table ID
  set_fact:
    default_route_table_id: "{{ route_table_result.route_tables[0].id }}"

- name: Tag Default Route Table
  ec2_vpc_route_table:
      region: "{{ vpc_region }}"
      vpc_id: "{{ vpc_id }}"
      route_table_id: "{{ default_route_table_id }}"
      tags:
          Name: "{{ vpc_name }}"
          Project: "{{ vpc_project }}"
          Purpose: "{{ vpc_purpose }}"
          Creator: "{{ vpc_creator }}"
          Environment: "{{ vpc_environment }}"
          Freetext: "VPC's default route table"

- name: Gather NACL Facts
  ec2_vpc_nacl_facts:
      region: "{{ vpc_region }}"
      filters:
          vpc-id: "{{ vpc_result.vpc.id }}"
          default: "true"
  register: nacl_result

- name: Store Default NACL ID
  set_fact:
    default_nacl_id: "{{ nacl_result.nacls[0].nacl_id }}"

- debug:
    msg: "Result is {{ default_nacl_id }}"

# Unfortunately, this only allows for creation and deletion, not updating.
- name: Tag Default NACL
  ec2_vpc_nacl:
      region: "{{ vpc_region }}"
      vpc_id: "{{ vpc_id }}"
      tags:
          Name: "{{ vpc_name }}"
          Project: "{{ vpc_project }}"
          Purpose: "{{ vpc_purpose }}"
          Creator: "{{ vpc_creator }}"
          Environment: "{{ vpc_environment }}"
          Freetext: "VPC's default network ACL"
  when: false

- name: Create Subnets
  ec2_vpc_subnet:
      az: "{{ item.az }}"
      cidr: "{{ item.cidr }}"
      region: "{{ vpc_region }}"
      state: "present"
      vpc_id: "{{ vpc_id }}"
      tags:
          Name: "{{ item.cidr }} - {{ item.az }}"
          Project: "{{ vpc_project }}"
          Purpose: "{{ item.purpose }}"
          Creator: "{{ vpc_creator }}"
          Environment: "{{ vpc_environment }}"
          Freetext: "{{ item.notes }}"
  items:
      - { az: "{{ vpc_region }}a", cidr: "{{ vpc_public_subnet_a_cidr_block }}/24", purpose: "Public subnet", notes: "None" }
      - { az: "{{ vpc_region }}a", cidr: "{{ vpc_private_subnet_a_cidr_block }}/24", purpose: "Private subnet", notes: "None" }
      - { az: "{{ vpc_region }}b", cidr: "{{ vpc_public_subnet_b_cidr_block }}/24", purpose: "Public subnet", notes: "None" }
      - { az: "{{ vpc_region }}b", cidr: "{{ vpc_private_subnet_a_cidr_block }}/24", purpose: "Private subnet", notes: "None" }


# security group facts are brand new so we can't search and tag yet
- debug:
    msg: "Result is {{ security_group_result }}"
